syntax = "v1"
 
type HelloRequest {
	Name string `path:"name,options=you|me"`
}

type Response {
	Code    int64  `json:"code"`
	Message string `json:"message"`
	Info    string `json:"info,omitempty"`
}

type PaginationRequest {
	Page     uint64 `json:"page"`
	PageSize uint64 `json:"pageSize"`
}

type RestPassRequest {
	// OldPassword string `json:"oldPassword"`
	NewPassword string `json:"newPassword"`
}

type Org {
	OrgId   uint64 `json:"orgId"`
	OrgName string `json:"orgName"`
	Role    string `json:"role"`
}

type LoginRequest {
	Email     string `json:"email"`
	Password  string `json:"password"`
	Captcha   string `json:"captcha"`
	CaptchaId string `json:"captchaId"`
}

type LoginResponse {
	Response
	Data LoginResponseData `json:"data,omitempty"`
}

type LoginResponseData {
	AccessToken  string `json:"accessToken"`
	AccessExpire int64  `json:"accessExpire"`
	Orgs         []Org  `json:"orgs"`
}

type RegisterRequest {
	Username  string `json:"username"`
	Nickname  string `json:"nickname"`
	Email     string `json:"email"`
	Phone     string `json:"phone"`
	Password  string `json:"password"`
	Captcha   string `json:"captcha"`
	CaptchaId string `json:"captchaId"`
}

type SendphonecodeRequest {
	Phonenum  string `json:"phonenum"`
	Captcha   string `json:"captcha"`
	CaptchaId string `json:"captchaId"`
}

type SendemailcodeRequest {
	Email     string `json:"email"`
	Captcha   string `json:"captcha"`
	CaptchaId string `json:"captchaId"`
}

type EmailcodeloginRequest {
	Email string `json:"email"`
	Code  string `json:"code"`
}

type PhonecodeloginRequest {
	Phonenum string `json:"phonenum"`
	Code     string `json:"code"`
}

type RegisterResponse {
	Response
	Data RegisterResponseData `json:"data,omitempty"`
}

type RegisterResponseData {
	UserId   uint64 `json:"userId"`
	Username string `json:"username"`
	Nickname string `json:"nickname"`
	Email    string `json:"email"`
	Phone    string `json:"phone"`
	Orgs     []Org  `json:"orgs"`
}

type UserResponse {
	Response
	Data UserResponseData `json:"data,omitempty"`
}

type UserResponseData {
	UserId    uint64 `json:"userId"`
	Username  string `json:"username"`
	Nickname  string `json:"nickname"`
	Phone     string `json:"phone"`
	Email     string `json:"email"`
	Balance   int64  `json:"balance"`
	IsDeleted int64  `json:"isDeleted"`
	Orgs      []Org  `json:"orgs"`
}

// New admin user management types
type AdminUserDeleteRequest {
	UserId uint64 `json:"userId" validate:"required"`
	Email  string `json:"email,optional"`
}

type AdminUserListRequest {
	Username string `json:"username,optional"`
	Email    string `json:"email,optional"`
	Phone    string `json:"phone,optional"`
	PaginationRequest
}

type AdminUserListResponse {
	Response
	Data AdminUserListResponseData `json:"data,omitempty"`
}

type AdminUserListResponseData {
	Users []UserResponseData `json:"users"`
	Total uint64             `json:"total"`
}

type BaseDataFilterResponse {
	Response
	Data BaseDataFilterResponseData `json:"data,omitempty"`
}

type BaseDataFilterResponseData {
	BillingMethod  []BaseData `json:"billingMethod"`
	Region         []BaseData `json:"region"`
	Supplier       []BaseData `json:"supplier"`
	Processor      []BaseData `json:"processor"`
	GPUModel       []BaseData `json:"gpuModel"`
	GraphicsMemory []BaseData `json:"graphicsMemory"`
	CPUModel       []BaseData `json:"cpuModel"`
	ProcessorCount []BaseData `json:"processorCount"`
	Image          []BaseData `json:"image"`
	IP             []BaseData `json:"ip"`
}

type BaseDataListRequest {
	DataType string `json:"data_type"`
	Name     string `json:"name"`
	PaginationRequest
}

type BaseDataListResponse {
	Response
	Data BaseDataListResponseData `json:"data,omitempty"`
}

type BaseDataListResponseData {
	BaseDataList []BaseData `json:"baseDataList"`
	Total        uint64     `json:"total"`
}

type BaseResponse {
	Response
	Data BaseData `json:"data,omitempty"`
}

type DeleteBaseDataRequest {
	Id uint64 `json:"id"`
}

type BaseData {
	Id       uint64 `json:"id"`
	DataID   uint64 `json:"dataId"`
	DataType string `json:"dataType"`
	Name     string `json:"name"`
	Comment  string `json:"comment"`
}

type BaseDataRequest {
	DataType string `json:"dataType"`
	Name     string `json:"name"`
	Comment  string `json:"comment"`
}

type ServerListResp {
	Response
	Data ServerListDataResp `json:"data,omitempty"`
}

type ServerListRequest {
	RegionId     int `json:"regionId"`
	TagId        int `json:"tagId"`
	IsPayMin     int `json:"isPayMin"`
	IsPayDaily   int `json:"isPayDaily"`
	IsPayMonthly int `json:"isPayMonthly"`
	IsPayYearly  int `json:"isPayYearly"`
	GpuModel     int `json:"gpuModel"`
	GpuCount     int `json:"gpuCount"`
	PaginationRequest
//  BillingMethod  uint64 `json:"billingMethod"`
//  Region         uint64 `json:"region"`
//  Supplier       uint64 `json:"supplier"`
//  Processor      uint64 `json:"processor"`
//  GpuModel       uint64 `json:"gpuModel"`
//  GraphicsMemory uint64 `json:"graphicsMemory"`
//  CpuModel       uint64 `json:"cpuModel"`
//  ProcessorCount uint64 `json:"processorCount"`
}

type ServerListDataResp {
	Servers   []Server `json:"servers"`
	PageIndex int      `json:"pageIndex"`
	PageSize  int      `json:"pageSize"`
	Offset    int      `json:"offset"`
	MaxPage   int      `json:"maxPage"`
	Total     int      `json:"total"`
	Page      int      `json:"page"`
}

type ServerUpdateResponse {
	Response
	Data Server `json:"data,omitempty"`
}

type ServerListResponse {
	Response
	Data ServerListDataResp `json:"data,omitempty"`
}

type CreateServerRequest {
	ServerId       uint64 `json:"serverId"`
	BillingMethod  uint64 `json:"billingMethod"`
	Region         uint64 `json:"region"`
	Supplier       uint64 `json:"supplier"`
	Processor      uint64 `json:"processor"`
	GpuModel       uint64 `json:"gpuModel"`
	GpuCount       uint64 `json:"gpuCount"`
	GraphicsMemory uint64 `json:"graphicsMemory"`
	CpuModel       uint64 `json:"cpuModel"`
	CpuCores       uint64 `json:"cpuCores"`
	ProcessorCount uint64 `json:"processorCount"`
	Memory         uint64 `json:"memory"`
	SystemDisk     uint64 `json:"systemDisk"`
	DataDisk       uint64 `json:"dataDisk"`
	MaxDataDisk    uint64 `json:"maxDataDisk"`
	SpeedDesc      string `json:"speedDesc"`
	GpuDriver      string `json:"gpuDriver"`
	CudaVersion    string `json:"cudaVersion"`
	Cost           uint64 `json:"cost"`
	Available      uint64 `json:"available"`
	Total          uint64 `json:"total"`
	ExpireDate     string `json:"expireDate"`
}

type Server {
	ServerId       uint64 `json:"serverId"`
	BillingMethod  uint64 `json:"billingMethod"`
	Region         uint64 `json:"region"`
	Supplier       uint64 `json:"supplier"`
	Processor      uint64 `json:"processor"`
	GpuModel       uint64 `json:"gpuModel"`
	GpuCount       uint64 `json:"gpuCount"`
	GraphicsMemory uint64 `json:"graphicsMemory"`
	CpuModel       uint64 `json:"cpuModel"`
	CpuCores       uint64 `json:"cpuCores"`
	ProcessorCount uint64 `json:"processorCount"`
	Memory         uint64 `json:"memory"`
	SystemDisk     uint64 `json:"systemDisk"`
	DataDisk       uint64 `json:"dataDisk"`
	MaxDataDisk    uint64 `json:"maxDataDisk"`
	SpeedDesc      string `json:"speedDesc"`
	GpuDriver      string `json:"gpuDriver"`
	CudaVersion    string `json:"cudaVersion"`
	Cost           uint64 `json:"cost"`
	Available      uint64 `json:"available"`
	Total          uint64 `json:"total"`
	ExpireDate     string `json:"expireDate"`
}

type CreateInstanceRequest {
	UserId        uint64 `json:"userId"`
	ServerId      uint64 `json:"serverId"`
	ImageId       uint64 `json:"ImageId"`
	Ip            uint64 `json:"ip"`
	Port          string `json:"port"`
	ContainerPort string `json:"containerPort"`
	GpuCores      uint64 `json:"gpuCores"`
	Memory        uint64 `json:"memory"`
	DiskPath      string `json:"diskPath"`
	Cost          uint64 `json:"cost"`
	MountPath     string `json:"mountPath"`
}

type CreateInstanceResponse {
	Response
	Data CreateInstanceResponseData `json:"data,omitempty"`
}

type StartInstancesRequest {
	InstanceId uint64 `json:"instanceId"`
}

type StopInstancesRequest {
	InstanceId uint64 `json:"instanceId"`
}

type TerminateInstancesRequest {
	InstanceId uint64 `json:"instanceId"`
}

type CreateInstanceResponseData {
	InstanceId    uint64 `json:"instanceId"`
	Name          string `json:"name"`
	State         string `json:"state"`
	UserId        uint64 `json:"userId"`
	ServerId      uint64 `json:"serverId"`
	ImageId       uint64 `json:"imageId"`
	Ip            uint64 `json:"ip"`
	Port          string `json:"port"`
	ContainerPort string `json:"containerPort"`
	GpuCores      uint64 `json:"gpuCores"`
	Memory        uint64 `json:"memory"`
	DiskPath      string `json:"diskPath"`
	Cost          uint64 `json:"cost"`
	MountPath     string `json:"mountPath"`
}

type Instance {
	InstanceId    uint64 `json:"instanceId"`
	Name          string `json:"name"`
	State         string `json:"state"`
	UserId        uint64 `json:"userId"`
	ServerId      uint64 `json:"serverId"`
	ImageId       uint64 `json:"imageId"`
	Ip            uint64 `json:"ip"`
	Port          string `json:"port"`
	ContainerPort string `json:"containerPort"`
	GpuCores      uint64 `json:"gpuCores"`
	Memory        uint64 `json:"memory"`
	DiskPath      string `json:"diskPath"`
	Cost          uint64 `json:"cost"`
	MountPath     string `json:"mountPath"`
}

// type ListVmsRequest {
//  Region string `json:"region,optional"`
//  PaginationRequest
// }
// type ListVmsResponse {
//  Response
//  Data ListVmsResponseData `json:"data",omitempty`
// }
// type ListVmsResponseData {
//  VirtualServers []Instance `json:"virtualServers"`
//  Total          uint64     `json:"total"`
// }
type InstancePortMapping {
	ServerId      uint64 `json:"serverId"`
	InstanceId    uint64 `json:"instanceId"`
	Port          uint64 `json:"port"`
	ContainerPort uint64 `json:"containerPort"`
}

type ServerIpMapping {
	ServerId uint64 `db:"serverId"`
	Ip       string `db:"ip"`
}

type UpdateInstanceRequest {
	InstanceId    uint64 `json:"instanceId"` // Identifier for the instance to be updated
	UserId        uint64 `json:"userId,optional"` // Optional: User ID associated with the instance
	ServerId      uint64 `json:"serverId,optional"` // Optional: Server ID associated with the instance
	Image         uint64 `json:"image,optional"` // Optional: Image ID
	Ip            uint64 `json:"ip,optional"` // Optional: IP address
	Port          string `json:"port,optional"` // Optional: Port number
	ContainerPort string `json:"containerPort,optional"` // Optional: Container port number
	GpuCores      uint64 `json:"gpuCores,optional"` // Optional: Number of GPU cores
	Memory        uint64 `json:"memory,optional"` // Optional: Amount of memory
	DiskPath      string `json:"diskPath,optional"` // Optional: Disk path
	Cost          uint64 `json:"cost,optional"` // Optional: Cost
	MountPath     string `json:"mountPath,optional"` // Optional: Mount path
}

type InstanceListResponse {
	Response
	Data InstanceListResponseData `json:"data,omitempty"`
}

type InstanceListResponseData {
	Instances []Instance `json:"instances"`
	Total     uint64     `json:"total"`
}

type CreateRechargeOrderRequest {
	OrgId     uint64 `json:"orgId"`
	PayMethod uint64 `json:"payMethod"`
	PayMoney  int64  `json:"payMoney"`
}

type CreateRechargeOrderData {
	OrgId     uint64 `json:"orgId"`
	PayMethod uint64 `json:"payMethod"`
	Amount    int64  `json:"amount"`
	Title     string `json:"title"`
	OrderNo   string `json:"orderNo"`
	Url       string `json:"url"`
}

type CreateRechargeOrderResponse {
	Response
	Data CreateRechargeOrderData `json:"data,omitempty"`
}

type TransactionRecordsListRequest {
	UserId         uint64 `json:"userId"`
	OrgId          uint64 `json:"orgId"`
	TransType      uint64 `json:"TransType"`
	CurrencyCode   string `json:"currencyCode"`
	BeginCreatedAt uint64 `json:"beginCreatedAt"`
	EndCreatedAt   uint64 `json:"endCreatedAt"`
	OrderNo        string `json:"orderNo"`
	PaginationRequest
}

type TransactionRecords {
	Id           int64  `json:"id"`
	UserId       uint64 `json:"userId"`
	OrgId        uint64 `json:"orgId"`
	CreatedAt    uint64 `json:"createdAt"`
	TransType    uint64 `json:"transType"`
	PayType      string `json:"payType"`
	CurrencyCode string `json:"currencyCode"`
	Detail       string `json:"detail"`
	OrderNo      string `json:"orderNo"`
	Username     string `json:"username"`
	Amount       int64  `json:"amount"`
	Balance      int64  `json:"balance"`
}

type CreateTransactionRecordsRequest {
	UserId       uint64 `json:"userId"`
	OrgId        uint64 `json:"orgId"`
	TransType    uint64 `json:"transType"`
	PayType      string `json:"payType"`
	CurrencyCode string `json:"currencyCode"`
	Detail       string `json:"detail"`
	OrderNo      string `json:"orderNo"`
	Amount       int64  `json:"amount"`
	Balance      int64  `json:"balance"`
}

type TransactionRecordsListResponse {
	Response
	Data TransactionRecordsListResponseData `json:"data,omitempty"`
}

type TransactionRecordsListResponseData {
	Items []TransactionRecords `json:"items"`
	Total int                  `json:"total"`
}

// New struct for captcha response
type CaptchaResponse {
	Response
	Data CaptchaResponseData `json:"data,omitempty"`
}

type CaptchaResponseData {
	CaptchaId   string `json:"captchaId"`
	ImageBase64 string `json:"imageBase64"`
}

// 邀请用户到组织
type OrgInviteUserReq {
	OrgId  uint64 `json:"orgId" validate:"required"`
	UserId uint64 `json:"userId"`
	Email  string `json:"email" validate:"required,email"`
	Role   string `json:"role" validate:"required,oneof=member admin"`
}

// 加用户到组织
type AddUserToOrgReq {
	OrgId  uint64 `json:"orgId" validate:"required"`
	UserId uint64 `json:"userId"`
	Role   string `json:"role" validate:"required,oneof=member guest manager admin"`
}

// 用户申请加入组织
type ApplyToJoinOrgReq {
	OrgId   uint64 `json:"orgId" validate:"required"`
	UserId  uint64 `json:"userId"`
	Message string `json:"message,optional"`
}

// 用户离开组织
type LeaveOrgReq {
	OrgId  uint64 `json:"orgId" validate:"required"`
	UserId uint64 `json:"userId"`
}

type UserBalanceResponse {
	Response
	Data []UserBalanceData `json:"data,omitempty"`
}

type UserBalanceData {
	UserId       uint64 `json:"userId"`
	Balance      int64  `json:"balance"`
	CurrencyCode string `json:"currencyCode"`
}

type RechargeOrderResponse {
	Response
	Data RechargeOrderData `json:"data,omitempty"`
}

type RechargeOrderData {
	OrderNo   string `json:"orderNo"`
	UserId    uint64 `json:"userId"`
	Amount    int64  `json:"amount"`
	PayMethod uint64 `json:"payMethod"`
	Status    string `json:"status"`
	CreatedAt uint64 `json:"createdAt"`
}

type ListRechargeHistoryRequest {
	UserId uint64 `json:"userId"`
	PaginationRequest
}

type ListRechargeHistoryResponse {
	Response
	Data ListRechargeHistoryData `json:"data,omitempty"`
}

type ListRechargeHistoryData {
	Orders []RechargeOrderData `json:"orders"`
	Total  uint64              `json:"total"`
}

type ListAllRechargeOrdersRequest {
	Status    string `json:"status,optional"`
	PayMethod uint64 `json:"payMethod"`
	PaginationRequest
}

type ListAllRechargeOrdersResponse {
	Response
	Data ListAllRechargeOrdersData `json:"data,omitempty"`
}

type ListAllRechargeOrdersData {
	Orders []RechargeOrderData `json:"orders"`
	Total  uint64              `json:"total"`
}

type ApproveRejectRechargeOrderRequest {
	OrderNo string `json:"orderNo"`
	Action  string `json:"action"` // "approve" or "reject"
	Reason  string `json:"reason,optional"`
}

type AdjustUserBalanceRequest {
	UserId       uint64 `json:"userId"`
	Amount       int64  `json:"amount"`
	CurrencyCode string `json:"currencyCode"`
	Reason       string `json:"reason"`
}

@server (
	prefix:  /api/v1
	timeout: 15s
)
service fca-api {
	//测试服务器相关
	@handler HelloHandler
	get /sys/hello/:name (HelloRequest) returns (Response) //ok

	@handler InfoHandler
	get /sys/info returns (Response) //ok

	@handler PingHandler
	get /sys/ping returns (Response) //ok

	//用户注册登录相关
	@handler CaptchaHandler
	get /user/captcha returns (CaptchaResponse) //ok

	@handler RegisterHandler
	post /user/register (RegisterRequest) returns (RegisterResponse) //ok

	@handler LoginHandler
	post /user/login (LoginRequest) returns (LoginResponse) //ok

	@handler SendphonecodeHandler
	post /user/sendphonecode (SendphonecodeRequest) returns (Response) //ok

	@handler SendemailcodeHandler
	post /user/sendemailcode (SendemailcodeRequest) returns (Response) //ok

	@handler PhonecodeloginHandler
	post /user/phonecodelogin (PhonecodeloginRequest) returns (LoginResponse) //ok,成功就直接登录

	@handler EmailcodeloginHandler
	post /user/emailcodelogin (EmailcodeloginRequest) returns (LoginResponse) //ok,成功就直接登录

	//充值相关
	@handler CallbackRechargeWeixinHandler
	post /recharge/callbackWeixin returns (Response)

	@handler ServerTagHandler
	get /server/tags returns (TagsResp)

	@handler AddServerTagHandler
	post /server/tag/add (AddServerTagRequest) returns (Response)

	@handler DeleteServerTagHandler
	post /server/tag/del (DeleteServerTagRequest) returns (Response)
}

@server (
	jwt: Auth
	// 路由前缀
	// 如果 key 固定为 "prefix:"
	// 则代表路由前缀声明，value 则为具体的路由前缀值，字符串中没让必须以 / 开头
	prefix: /api/v1
	// 路由分组
	// 如果 key 固定为 "group:"，则代表路由分组声明
	// value 则为具体分组名称，在 goctl生成代码后会根据此值进行文件夹分组
	//--- group: Foo
	// 中间件
	// 如果 key 固定为 middleware:"，则代表中间件声明
	// value 则为具体中间件函数名称，在 goctl生成代码后会根据此值进生成对应的中间件函数
	middleware: AuthInterceptor
	// 超时控制
	// 如果 key 固定为  timeout:"，则代表超时配置
	// value 则为具体中duration，在 goctl生成代码后会根据此值进生成对应的超时配置
	timeout: 15s
	// 其他 key-value，除上述几个内置 key 外，其他 key-value
	// 也可以在作为 annotation 信息传递给 goctl 及其插件，但就
	// 目前来看，goctl 并未使用。
	foo: bar
)
service fca-api {
	//admin 控制user功能
	// 完成 AdminUserDelete 逻辑，如果ID>0和email ，就用两个一起查，如果只有单个，就单个查询
	@handler AdminUserDeleteHandler
	post /admin/user/delete (AdminUserDeleteRequest) returns (Response) //OK

	@handler AdminUserListHandler
	post /admin/user/list (AdminUserListRequest) returns (AdminUserListResponse) //OK

	// 组织登录相关
	@doc "Invite a user to join an organization"
	@handler OrgInviteUserHandler
	post /org/inviteuser (OrgInviteUserReq) returns (Response) //ok

	@doc "Add a user to an organization"
	@handler AddUserToOrgHandler
	post /org/adduser (AddUserToOrgReq) returns (Response) //ok

	@doc "User applies to join an organization"
	@handler ApplyToJoinOrgHandler
	post /org/applyjoin (ApplyToJoinOrgReq) returns (Response) //ok

	@doc "User leave an organization"
	@handler LeaveOrgHandler
	post /org/leave (LeaveOrgReq) returns (Response) //ok

	// 系统相关
	@handler KeepAliveHandler
	get /user/keepalive returns (Response) //ok

	// 用户信息相关
	@handler ResetPassHandler
	post /user/resetpass (RestPassRequest) returns (Response) //ok

	@handler UserHandler
	post /user/info returns (UserResponse) //ok

	@handler UpdateUserInfoHandler
	put /user/info (UpdateUserInfoRequest) returns (Response) //ok

	// 管理信息相关 =========================================================
	@handler BaseDataListHandler
	post /basedata/List (BaseDataListRequest) returns (BaseDataListResponse)

	@handler CreateBaseDataHandler
	post /basedata/create (BaseDataRequest) returns (BaseResponse)

	@handler UpdateBaseDataHandler
	post /basedata/update (BaseData) returns (BaseResponse)

	@handler DeleteBaseDataHandler
	post /basedata/delete (DeleteBaseDataRequest) returns (Response)

	@handler BaseDataFilterHandler
	post /basedata/filter returns (BaseDataFilterResponse)

	// 管理信息相关 =========================================================
	@handler CreateServerHandler
	post /server/create (Server) returns (ServerUpdateResponse)

	@handler UpdateServerHandler
	post /server/update (Server) returns (ServerUpdateResponse)

	@handler ServerListHandler
	post /server/list (ServerListRequest) returns (ServerListResponse)

	@handler CreateInstanceHandler
	post /instance/create (CreateInstanceRequest) returns (CreateInstanceResponse)

	@handler StartInstancesHandler
	post /instance/start (StartInstancesRequest) returns (Response)

	@handler StopInstancesHandler
	post /instance/stop (StopInstancesRequest) returns (Response)

	@handler TerminateInstancesHandler
	post /instance/terminate (TerminateInstancesRequest) returns (Response)

	@handler ListInstancesHandler
	post /instance/list (InstanceListRequest) returns (InstanceListResponse)

	@handler UpdateInstanceHandler
	put /instance/update (UpdateInstanceRequest) returns (CreateInstanceResponse)

	@handler DeleteInstanceHandler
	delete /instance/delete/:instanceId returns (Response)

	@handler CreateRechargeOrderHandler
	post /recharge/create (CreateRechargeOrderRequest) returns (CreateRechargeOrderResponse)

	// 财务信息相关
	@handler ListTransactionRecordsHandler
	post /transactions/list (TransactionRecordsListRequest) returns (TransactionRecordsListResponse)

	@handler ListOrderRecordsHandler
	post /orders/list (OrderRecordsListRequest) returns (OrderRecordsListResponse)

	// User-side APIs
	@handler GetUserBalanceHandler
	get /user/balance returns (UserBalanceResponse)

	// @handler CreateRechargeOrderHandler
	// post /user/recharge/create (CreateRechargeOrderRequest) returns (RechargeOrderResponse)
	@handler ListRechargeHistoryHandler
	post /user/recharge/history (ListRechargeHistoryRequest) returns (ListRechargeHistoryResponse)

	// Admin-side APIs
	@handler ListAllRechargeOrdersHandler
	post /admin/recharge/list (ListAllRechargeOrdersRequest) returns (ListAllRechargeOrdersResponse)

	@handler ApproveRejectRechargeOrderHandler
	post /admin/recharge/approve-reject (ApproveRejectRechargeOrderRequest) returns (Response)

	@handler AdjustUserBalanceHandler
	post /admin/user/adjust-balance (AdjustUserBalanceRequest) returns (UserBalanceResponse)
}

//gen by claude
type ResetPasswordRequest {
	Email       string `json:"email"`
	OldPassword string `json:"oldPassword"`
	NewPassword string `json:"newPassword"`
}

type UpdateUserInfoRequest {
	Username string `json:"username,optional"`
	Email    string `json:"email,optional"`
	Phone    string `json:"phone,optional"`
	Nickname string `json:"nickname,optional"`
// Balance  int64  `json:"balance,optional"`
}

type InstanceListRequest {
	UserId   uint64 `json:"userId,optional"`
	ServerId uint64 `json:"serverId,optional"`
	PaginationRequest
}

// type Bucket {
//  Name         string `json:"name"`
//  CreationDate string `json:"creationDate"`
//  Region       string `json:"region"`
// }
type CreateBucketRequest {
	BucketName string `json:"bucketName"`
	Region     string `json:"region"`
}

type CreateBucketResponse {
	Response
	Data CreateBucketResponseData `json:"data,omitempty"`
}

type CreateBucketResponseData {
	Bucket Bucket `json:"bucket"`
}

type UploadObjectRequest {
	BucketName string `json:"bucketName"`
	ObjectKey  string `json:"objectKey"`
	Content    string `json:"content"`
}

type DeleteObjectRequest {
	BucketName string `json:"bucketName"`
	ObjectKey  string `json:"objectKey"`
}

// Define the response structure for deleting an object
type DeleteObjectResponse {
	Response
}

type ListObjectsResponse {
	Response
	Data ListObjectsResponseData `json:"data,omitempty"`
}

type ListObjectsResponseData {
	Objects []Object `json:"objects"`
	Total   uint64   `json:"total"`
}

type OrderRecordsListRequest {
	UserId         uint64 `json:"userId"`
	OrderType      uint   `json:"orderType"`
	BeginCreatedAt uint64 `json:"beginCreatedAt"`
	EndCreatedAt   uint64 `json:"endCreatedAt"`
	OrderNo        string `json:"orderNo"`
	PaginationRequest
}

type OrderRecordsListResponse {
	Response
	Data OrderRecordsListResponseData `json:"data,omitempty"`
}

type OrderRecordsListResponseData {
	Items []OrderRecords `json:"items"`
	Total int            `json:"total"`
}

type OrderRecords {
	Id            uint64 `json:"id"`
	OrderNo       string `json:"orderNo"`
	InstanceId    uint64 `json:"instanceId"`
	RunningTime   uint64 `json:"runningTime"`
	CreatedAt     uint64 `json:"createdAt"`
	BillingMethod uint64 `json:"billingMethod"`
	OrderAmount   uint64 `json:"orderAmount"`
	Discount      uint64 `json:"discount"`
	ActualAmount  uint64 `json:"actualAmount"`
	UserId        uint64 `json:"userId"`
	OrderType     uint64 `json:"orderType"`
}

///
// ... (previous content remains unchanged until the end) ...
// Role and Permission Management Types
type Role {
	Id          uint64 `json:"id"`
	Name        string `json:"name"`
	Description string `json:"description"`
	CreatedAt   int64  `json:"createdAt"`
	UpdatedAt   int64  `json:"updatedAt"`
}

type Permission {
	Id          uint64 `json:"id"`
	Name        string `json:"name"`
	Code        string `json:"code"`
	Description string `json:"description"`
	CreatedAt   int64  `json:"createdAt"`
	UpdatedAt   int64  `json:"updatedAt"`
}

type CreateRoleRequest {
	Name        string   `json:"name" validate:"required"`
	Description string   `json:"description"`
	Permissions []uint64 `json:"permissions"` // Permission IDs
}

type UpdateRoleRequest {
	Id          uint64   `json:"id" validate:"required"`
	Name        string   `json:"name,optional"`
	Description string   `json:"description,optional"`
	Permissions []uint64 `json:"permissions,optional"` // Permission IDs
}

type RoleResponse {
	Response
	Data Role `json:"data,omitempty"`
}

type RoleListRequest {
	Name string `json:"name,optional"`
	PaginationRequest
}

type RoleListResponse {
	Response
	Data RoleListResponseData `json:"data,omitempty"`
}

type RoleListResponseData {
	Roles []Role `json:"roles"`
	Total uint64 `json:"total"`
}

type CreatePermissionRequest {
	Name        string `json:"name" validate:"required"`
	Code        string `json:"code" validate:"required"`
	Description string `json:"description"`
}

type UpdatePermissionRequest {
	Id          uint64 `json:"id" validate:"required"`
	Name        string `json:"name,optional"`
	Code        string `json:"code,optional"`
	Description string `json:"description,optional"`
}

type PermissionResponse {
	Response
	Data Permission `json:"data,omitempty"`
}

type PermissionListRequest {
	Name string `json:"name,optional"`
	Code string `json:"code,optional"`
	PaginationRequest
}

type PermissionListResponse {
	Response
	Data PermissionListResponseData `json:"data,omitempty"`
}

type PermissionListResponseData {
	Permissions []Permission `json:"permissions"`
	Total       uint64       `json:"total"`
}

type AssignRoleRequest {
	UserId uint64 `json:"userId" validate:"required"`
	RoleId uint64 `json:"roleId" validate:"required"`
}

type UserRolesResponse {
	Response
	Data UserRolesResponseData `json:"data,omitempty"`
}

type UserRolesResponseData {
	Roles []Role `json:"roles"`
}

type DeleteRoleRequest {
	Id uint64 `path:"id"`
}

type GetRoleRequest {
	Id uint64 `path:"id"`
}

type DeletePermissionRequest {
	Id uint64 `path:"id"`
}

type DeleteResourceRequest {
	Id uint64 `path:"id"`
}

type GetpermissionRequest {
	Id uint64 `path:"id"`
}

type RevokeRoleRequest {
	UserId uint64 `json:"userId"`
	RoleId uint64 `json:"roleId"`
}

type GetUsersRoleRequest {
	UserId uint64 `json:"userId"`
}

@server (
	jwt:        Auth
	prefix:     /api/v1
	middleware: AuthInterceptor
	timeout:    15s
)
service fca-api {
	// Role Management
	@handler CreateRoleHandler
	post /role/create (CreateRoleRequest) returns (RoleResponse)

	@handler UpdateRoleHandler
	put /role/update (UpdateRoleRequest) returns (RoleResponse)

	@handler DeleteRoleHandler
	delete /role/delete/:id (DeleteRoleRequest) returns (Response)

	@handler GetRoleHandler
	get /role/:id (GetRoleRequest) returns (RoleResponse)

	@handler ListRolesHandler
	post /role/list (RoleListRequest) returns (RoleListResponse)

	// Permission Management
	@handler CreatePermissionHandler
	post /permission/create (CreatePermissionRequest) returns (PermissionResponse)

	@handler UpdatePermissionHandler
	put /permission/update (UpdatePermissionRequest) returns (PermissionResponse)

	@handler DeletePermissionHandler
	delete /permission/delete/:id (DeletePermissionRequest) returns (Response)

	@handler GetPermissionHandler
	get /permission/:id (GetpermissionRequest) returns (PermissionResponse)

	@handler ListPermissionsHandler
	post /permission/list (PermissionListRequest) returns (PermissionListResponse)

	// User Role Assignment
	@handler AssignRoleHandler
	post /user/role/assign (AssignRoleRequest) returns (Response)

	@handler RevokeRoleHandler
	post /user/role/revoke (RevokeRoleRequest) returns (Response)

	@handler GetUserRolesHandler
	post /user/roles (GetUsersRoleRequest) returns (UserRolesResponse)
}

type Tag {
	TagID   int    `json:"tagId"`
	TagName string `json:"tagName"`
}

type DeleteServerTagRequest {
	ServerId uint64 `json:"serverId"`
	TagID    int    `json:"tagId"`
}

type AddServerTagRequest {
	ServerId uint64 `json:"serverId"`
	TagID    int    `json:"tagId"`
}

type TagsResp {
	Response
	Data []Tag `json:"data,omitempty"`
}

type GpusResp {
	ID       int    `json:"id"`
	GpuName  string `json:"gpuName"`
	IdleNum  int    `json:"idleNum"`
	TotalNum int    `json:"totalNum"`
}

type GpuTypesResp {
	Response
	Data []GpusResp `json:"data,omitempty"`
}

type Servers {
	ServerId         uint64 `json:"serverId"`
	ServerName       string `json:"serverName"`
	IsOnline         int64  `json:"isOnline"`
	BillingMethod    uint64 `json:"billingMethod"` // 计费方式
	RegionId         uint64 `json:"regionId"` // 地区
	IsPayMin         int64  `json:"isPayMin"`
	IsPayDaily       int64  `json:"isPayDaily"`
	IsPayMonthly     int64  `json:"isPayMonthly"`
	IsPayYearly      int64  `json:"isPayYearly"`
	PayPrices        string `json:"payPrices"`
	DiskPayPrices    string `json:"diskPayPrices"`
	Supplier         uint64 `json:"supplier"` // 供应商
	Processor        uint64 `json:"processor"` // 处理器类型
	GpuModel         uint64 `json:"gpuModel"` // GPU型号
	GpuCount         uint64 `json:"gpuCount"` // GPU数量
	GpuUsed          int64  `json:"gpuUsed"` // 已使用GPU数量
	GpuMem           uint64 `json:"gpuMem"` // 显存
	CpuModel         uint64 `json:"cpuModel"` // CPU型号
	CpuCores         uint64 `json:"cpuCores"` // CPU核数
	CpuFrequency     int64  `json:"cpuFrequency"` // cpu频率
	ThreadCount      uint64 `json:"threadCount"` // 处理器线程数量
	Memory           uint64 `json:"memory"` // 内存(GB)
	SystemDisk       uint64 `json:"systemDisk"` // 系统盘(GB)
	DataDisk         uint64 `json:"dataDisk"` // 数据盘(GB)
	MaxDataDisk      uint64 `json:"maxDataDisk"` // 最大数据盘(GB)
	SpeedDesc        string `json:"speedDesc"` // 运算速度
	OsName           string `json:"osName"` // 操作系统名称
	OsVersion        string `json:"osVersion"` // 操作系统版本号
	KernelVersion    string `json:"kernelVersion"` // 内核版本
	GpuDriver        string `json:"gpuDriver"` // GPU驱动
	CudaVersion      string `json:"cudaVersion"` // cuda版本
	DockerVersion    string `json:"dockerVersion"` // Docker版本号
	NvidiaDocker     int64  `json:"nvidiaDocker"` // 是否支持nvidia-docker
	NetworkDownSpeed int64  `json:"networkDownSpeed"` // 网络下载速度
	NetworkUpSpeed   int64  `json:"networkUpSpeed"` // 网络上传速度
	AgentVersion     string `json:"agentVersion"` // 代理版本号
	Cost             uint64 `json:"cost"` // 费用
	Available        uint64 `json:"available"` // 空闲数量
	Total            uint64 `json:"total"` // 可用总量
	ExpireDate       uint64 `json:"expireDate"` // 到期时间
	RegionName       string `json:"regionName"` // 地区
	Tags             []Tag  `json:"tags"`
}

// Daily Usage and Minute Usage Types
type DailyUsageListRequest {
	OrgId     uint64 `json:"orgId,optional"`
	UserId    uint64 `json:"userId,optional"`
	StartDate string `json:"startDate,optional"`
	EndDate   string `json:"endDate,optional"`
	PaginationRequest
}

type DailyUsageListResponse {
	Response
	Data DailyUsageListResponseData `json:"data,omitempty"`
}

type DailyUsageListResponseData {
	Items []DailyUsageItem `json:"items"`
	Total uint64           `json:"total"`
}

type DailyUsageItem {
	UsageId         uint64 `json:"usageId"`
	OrgId           uint64 `json:"orgId"`
	UserId          uint64 `json:"userId"`
	UsageDate       string `json:"usageDate"`
	ResourceId      uint64 `json:"resourceId"`
	UsageMinAmount  int64  `json:"usageMinAmount"`
	UsageHourAmount int64  `json:"usageHourAmount"`
	UnitHourPrice   int64  `json:"unitHourPrice"`
	DiscountId      uint64 `json:"discountId"`
	Discount        int64  `json:"discount"`
}

type MinuteUsageListRequest {
	UsageId       uint64 `json:"usageId,optional"`
	OrgId         uint64 `json:"orgId,optional"`
	UserId        uint64 `json:"userId,optional"`
	StartDatetime string `json:"startDatetime,optional"`
	EndDatetime   string `json:"endDatetime,optional"`
	PaginationRequest
}

type MinuteUsageListResponse {
	Response
	Data MinuteUsageListResponseData `json:"data,omitempty"`
}

type MinuteUsageListResponseData {
	Items []MinuteUsageItem `json:"items"`
	Total uint64            `json:"total"`
}

type MinuteUsageItem {
	Id            uint64 `json:"id"`
	UsageId       uint64 `json:"usageId"`
	OrgId         uint64 `json:"orgId"`
	UserId        uint64 `json:"userId"`
	ResourceId    uint64 `json:"resourceId"`
	UsageDatetime string `json:"usageDatetime"`
	Fee           int64  `json:"fee"`
	Discount      int64  `json:"discount"`
}

// Resource Types
type ResourceCreateRequest {
	//OrgId         uint64 `json:"orgId"`
	ResourceType  string `json:"resourceType"`
	UnitMinPrice  int64  `json:"unitMinPrice"`
	UnitHourPrice int64  `json:"unitHourPrice"`
	UnitDayPrice  int64  `json:"unitDayPrice"`
}

type ResourceUpdateRequest {
	ResourceId    uint64 `json:"resourceId"`
	OrgId         uint64 `json:"orgId,optional"`
	ResourceType  string `json:"resourceType,optional"`
	UnitMinPrice  int64  `json:"unitMinPrice,optional"`
	UnitHourPrice int64  `json:"unitHourPrice,optional"`
	UnitDayPrice  int64  `json:"unitDayPrice,optional"`
}

type ResourceListRequest {
	OrgId        uint64 `json:"orgId,optional"`
	ResourceType string `json:"resourceType,optional"`
	PaginationRequest
}

type ResourceResponse {
	Response
	Data ResourceItem `json:"data,omitempty"`
}

type ResourceListResponse {
	Response
	Data ResourceListResponseData `json:"data,omitempty"`
}

type ResourceListResponseData {
	Items []ResourceItem `json:"items"`
	Total uint64         `json:"total"`
}

type ResourceItem {
	ResourceId    uint64 `json:"resourceId"`
	ResourceType  string `json:"resourceType"`
	UnitMinPrice  int64  `json:"unitMinPrice"`
	UnitHourPrice int64  `json:"unitHourPrice"`
	UnitDayPrice  int64  `json:"unitDayPrice"`
	IsDeleted     int64  `json:"isDeleted"`
	CreatedAt     string `json:"createdAt"`
	CreatedBy     uint64 `json:"createdBy"`
}

@server (
	jwt:        Auth
	prefix:     /api/v1
	middleware: AuthInterceptor
	timeout:    15s
)
service fca-api {
	// Daily Usage and Minute Usage endpoints
	@handler ListDailyUsageHandler
	post /usage/daily/list (DailyUsageListRequest) returns (DailyUsageListResponse)

	@handler ListMinuteUsageHandler
	post /usage/minute/list (MinuteUsageListRequest) returns (MinuteUsageListResponse)

	// Resource Management endpoints
	@handler CreateResourceHandler
	post /resource/create (ResourceCreateRequest) returns (ResourceResponse)

	@handler UpdateResourceHandler
	put /resource/update (ResourceUpdateRequest) returns (ResourceResponse)

	@handler DeleteResourceHandler
	delete /resource/delete/:id (DeleteResourceRequest) returns (Response)

	@handler ListResourcesHandler
	post /resource/list (ResourceListRequest) returns (ResourceListResponse)
}

// Instance Log Types
type InstanceLog {
	Id         uint64 `json:"id"`
	InstanceId uint64 `json:"instanceId"`
	UserId     uint64 `json:"userId"`
	Action     string `json:"action"`
	CreatedAt  string `json:"createdAt"`
	UpdatedAt  string `json:"updatedAt"`
}

type CreateInstanceLogRequest {
	InstanceId uint64 `json:"instanceId"`
	UserId     uint64 `json:"userId"`
	Action     string `json:"action"`
}

type StopInstanceLogRequest {
	InstanceId uint64 `json:"instanceId"`
	UserId     uint64 `json:"userId"`
}

type ListInstanceLogRequest {
	InstanceId uint64 `json:"instanceId,optional"`
	UserId     uint64 `json:"userId,optional"`
	Action     string `json:"action,optional"`
	PaginationRequest
}

type InstanceLogResponse {
	Response
	Data InstanceLog `json:"data,omitempty"`
}

type ListInstanceLogResponse {
	Response
	Data ListInstanceLogResponseData `json:"data,omitempty"`
}

type ListInstanceLogResponseData {
	Logs  []InstanceLog `json:"logs"`
	Total uint64        `json:"total"`
}

// User Resources Types
type ResourceUser {
	Id           uint64 `json:"id"`
	UserId       uint64 `json:"userId"`
	ResourceId   uint64 `json:"resourceId"`
	OrgId        uint64 `json:"orgId"`
	ResourceType string `json:"resourceType"`
	Stat         string `json:"stat"`
	StartAt      string `json:"startAt,optional"`
	StopAt       string `json:"stopAt,optional"`
	CreatedAt    string `json:"createdAt"`
}

type CreateResourceUserRequest {
	UserId       uint64 `json:"userId"`
	ResourceId   uint64 `json:"resourceId"`
	OrgId        uint64 `json:"orgId"`
	ResourceType string `json:"resourceType"`
	Stat         string `json:"stat"`
	StartAt      string `json:"startAt,optional"`
	StopAt       string `json:"stopAt,optional"`
}

type UpdateResourceUserRequest {
	Id           uint64 `json:"id"`
	UserId       uint64 `json:"userId,optional"`
	ResourceId   uint64 `json:"resourceId,optional"`
	OrgId        uint64 `json:"orgId,optional"`
	ResourceType string `json:"resourceType,optional"`
	Stat         string `json:"stat,optional"`
	StartAt      string `json:"startAt,optional"`
	StopAt       string `json:"stopAt,optional"`
}

type StartResourceUserRequest {
	UserId     uint64 `json:"userId"`
	ResourceId uint64 `json:"resourceId"`
}

type StopResourceUserRequest {
	UserId     uint64 `json:"userId"`
	ResourceId uint64 `json:"resourceId"`
}

type ListResourceUserRequest {
	UserId       uint64 `json:"userId,optional"`
	ResourceId   uint64 `json:"resourceId,optional"`
	OrgId        uint64 `json:"orgId,optional"`
	ResourceType string `json:"resourceType,optional"`
	Stat         string `json:"stat,optional"`
	PaginationRequest
}

type ResourceUserResponse {
	Response
	Data ResourceUser `json:"data,omitempty"`
}

type ListResourceUserResponse {
	Response
	Data ListResourceUserResponseData `json:"data,omitempty"`
}

type ListResourceUserResponseData {
	Resources []ResourceUser `json:"resources"`
	Total     uint64         `json:"total"`
}

type ServerOrg {
	Id          uint64 `json:"id"`
	ServerId    uint64 `json:"serverId"`
	OrgId       uint64 `json:"orgId"`
	CreatedAt   int64  `json:"createdAt"`
	UpdatedAt   int64  `json:"updatedAt"`
	Description string `json:"description,optional"`
}

type AddServerOrgRequest {
	ServerId    uint64 `json:"serverId" validate:"required"`
	OrgId       uint64 `json:"orgId" validate:"required"`
	Description string `json:"description,optional"`
}

type DeleteServerOrgRequest {
	ServerId uint64 `json:"serverId" validate:"required"`
	OrgId    uint64 `json:"orgId" validate:"required"`
}

type ServerOrgResponse {
	Response
	Data ServerOrg `json:"data,omitempty"`
}

type ResourceOrg {
	Id          uint64 `json:"id"`
	ResourceId  uint64 `json:"ResourceId"`
	OrgId       uint64 `json:"orgId"`
	CreatedAt   int64  `json:"createdAt"`
	UpdatedAt   int64  `json:"updatedAt"`
	Description string `json:"description,optional"`
}

type AddResourceOrgRequest {
	ResourceId  uint64 `json:"ResourceId" validate:"required"`
	OrgId       uint64 `json:"orgId" validate:"required"`
	Description string `json:"description,optional"`
}

type DeleteResourceOrgRequest {
	ResourceId uint64 `json:"ResourceId" validate:"required"`
	OrgId      uint64 `json:"orgId" validate:"required"`
}

type ResourceOrgResponse {
	Response
	Data ResourceOrg `json:"data,omitempty"`
}

type Image {
	ImageId   uint64 `json:"imageId"`
	ImageName string `json:"imageName"` // Docker image name
	CreatedAt string `json:"createdAt"`
	UpdatedAt string `json:"updatedAt"`
}

type CreateImageRequest {
	ImageName string `json:"imageName"` // Docker image name
}

type GetImageRequest {
	ImageId uint64 `json:"imageId"`
}

type UpdateImageRequest {
	ImageId   uint64 `json:"imageId"`
	ImageName string `json:"imageName"` // Docker image name
}

type DeleteImageRequest {
	ImageId uint64 `json:"imageId"`
}

type ListImagesRequest {
	ImageName string `json:"imageName,optional"` // Optional filter by image name
	PaginationRequest
}

type ImageResponse {
	Response
	Data Image `json:"data,omitempty"`
}

type ListImagesResponse {
	Response
	Data ListImagesResponseData `json:"data,omitempty"`
}

type ListImagesResponseData {
	Images []Image `json:"images"`
	Total  uint64  `json:"total"`
}

// Common discount fields
type DiscountBase {
	Memo      string `json:"memo,optional"` // Optional memo
	Startdate string `json:"startdate"` // Discount start date
	Enddate   string `json:"enddate"` // Discount end date
	Discount  int64  `json:"discount"` // Discount value (100 means 10.0)
}

// Resource Discount types
type Discount {
	DiscountId uint64 `json:"discountId"` // Discount ID
	OrgId      uint64 `json:"orgId"` // Organization ID
	ResourceId uint64 `json:"resourceId"` // Resource ID
	DiscountBase
	IsDeleted int64  `json:"isDeleted"` // Soft delete flag
	DeletedAt string `json:"deletedAt,optional"` // Deletion time
	CreatedAt string `json:"createdAt"` // Creation time
	CreatedBy uint64 `json:"createdBy"` // Creator ID
}

type CreateDiscountRequest {
	OrgId      uint64 `json:"orgId"` // Organization ID
	ResourceId uint64 `json:"resourceId"` // Resource ID
	DiscountBase
}

type UpdateDiscountRequest {
	DiscountId uint64 `json:"discountId"` // Discount ID
	DiscountBase
}

type GetDiscountRequest {
	DiscountId uint64 `json:"discountId"`
}

type DeleteDiscountRequest {
	DiscountId uint64 `json:"discountId"`
}

type ListDiscountRequest {
	OrgId      uint64 `json:"orgId,optional"` // Optional filter by org
	ResourceId uint64 `json:"resourceId,optional"` // Optional filter by resource
	PaginationRequest
}

type DiscountResponse {
	Response
	Data Discount `json:"data,omitempty"`
}

type ListDiscountResponse {
	Response
	Data ListDiscountResponseData `json:"data,omitempty"`
}

type ListDiscountResponseData {
	Discounts []Discount `json:"discounts"`
	Total     uint64     `json:"total"`
}

// Server Discount types
type ServerDiscount {
	SrvDiscountId uint64 `json:"srvDiscountId"` // Server discount ID
	OrgId         uint64 `json:"orgId"` // Organization ID
	ServerId      uint64 `json:"serverId"` // Server ID
	DiscountBase
	IsDeleted int64  `json:"isDeleted"` // Soft delete flag
	DeletedAt string `json:"deletedAt,optional"` // Deletion time
	CreatedAt string `json:"createdAt"` // Creation time
	CreatedBy uint64 `json:"createdBy"` // Creator ID
}

type CreateServerDiscountRequest {
	OrgId    uint64 `json:"orgId"` // Organization ID
	ServerId uint64 `json:"serverId"` // Server ID
	DiscountBase
}

type UpdateServerDiscountRequest {
	SrvDiscountId uint64 `json:"srvDiscountId"` // Server discount ID
	DiscountBase
}

type GetServerDiscountRequest {
	SrvDiscountId uint64 `json:"srvDiscountId"`
}

type DeleteServerDiscountRequest {
	SrvDiscountId uint64 `json:"srvDiscountId"`
}

type ListServerDiscountRequest {
	OrgId    uint64 `json:"orgId,optional"` // Optional filter by org
	ServerId uint64 `json:"serverId,optional"` // Optional filter by server
	PaginationRequest
}

type ServerDiscountResponse {
	Response
	Data ServerDiscount `json:"data,omitempty"`
}

type ListServerDiscountResponse {
	Response
	Data ListServerDiscountResponseData `json:"data,omitempty"`
}

type ListServerDiscountResponseData {
	ServerDiscounts []ServerDiscount `json:"serverDiscounts"`
	Total           uint64           `json:"total"`
}

// Bucket types
type Bucket {
	BucketId   uint64 `json:"bucketId"` // Bucket ID
	BucketName string `json:"bucketName"` // Bucket name
	UserId     uint64 `json:"userId"` // User ID
	Region     string `json:"region"` // Region
	IsDeleted  int64  `json:"isDeleted"` // Soft delete flag
	DeletedAt  string `json:"deletedAt,optional"` // Deletion time
	CreatedAt  string `json:"createdAt"` // Creation time
	UpdatedAt  string `json:"updatedAt"` // Last update time
}

// type CreateBucketRequest {
//  BucketName string `json:"bucketName"` // Bucket name
//  Region     string `json:"region"`     // Region
// }
type UpdateBucketRequest {
	BucketId   uint64 `json:"bucketId"` // Bucket ID
	BucketName string `json:"bucketName"` // Bucket name
	Region     string `json:"region"` // Region
}

type GetBucketRequest {
	BucketId uint64 `json:"bucketId"`
}

type DeleteBucketRequest {
	BucketId uint64 `json:"bucketId"`
}

type ListBucketRequest {
	Region string `json:"region,optional"` // Optional filter by region
	PaginationRequest
}

type BucketResponse {
	Response
	Data Bucket `json:"data,omitempty"`
}

type ListBucketResponse {
	Response
	Data ListBucketResponseData `json:"data,omitempty"`
}

type ListBucketResponseData {
	Buckets []Bucket `json:"buckets"`
	Total   uint64   `json:"total"`
}

// Object types
type Object {
	ObjId     uint64 `json:"objId"` // Object ID
	BucketId  uint64 `json:"bucketId"` // Bucket ID
	UserId    uint64 `json:"userId"` // User ID
	Key       string `json:"key"` // Object key/name
	Path      string `json:"path"` // Object path
	CreatedAt string `json:"createdAt"` // Creation time
	UpdatedAt string `json:"updatedAt"` // Last update time
}

type CreateObjectRequest {
	BucketId uint64 `json:"bucketId"` // Bucket ID
	Key      string `json:"key"` // Object key/name
	Path     string `json:"path"` // Object path
}

type UpdateObjectRequest {
	ObjId uint64 `json:"objId"` // Object ID
	Key   string `json:"key"` // Object key/name
	Path  string `json:"path"` // Object path
}

type GetObjectRequest {
	ObjId uint64 `json:"objId"`
}

type ListObjectRequest {
	BucketId uint64 `json:"bucketId,optional"` // Optional filter by bucket
	Key      string `json:"key,optional"` // Optional filter by key
	PaginationRequest
}

type ObjectResponse {
	Response
	Data Object `json:"data,omitempty"`
}

type ListObjectResponse {
	Response
	Data ListObjectResponseData `json:"data,omitempty"`
}

type ListObjectResponseData {
	Objects []Object `json:"objects"`
	Total   uint64   `json:"total"`
}

@server (
	jwt:        Auth
	prefix:     /api/v1
	middleware: AuthInterceptor
	timeout:    15s
)
service fca-api {
	// Instance Log Management
	@handler CreateInstanceLogHandler
	post /instance/log/create (CreateInstanceLogRequest) returns (InstanceLogResponse)

	@handler StopInstanceLogHandler
	post /instance/log/stop (StopInstanceLogRequest) returns (Response)

	@handler ListInstanceLogHandler
	post /instance/log/list (ListInstanceLogRequest) returns (ListInstanceLogResponse)

	// User Resources Management
	@handler CreateResourceUserHandler
	post /resource/user/create (CreateResourceUserRequest) returns (ResourceUserResponse)

	@handler StartResourceUserHandler
	post /resource/user/start (StartResourceUserRequest) returns (Response)

	@handler StopResourceUserHandler
	post /resource/user/stop (StopResourceUserRequest) returns (Response)

	@handler ListResourceUserHandler
	post /resource/user/list (ListResourceUserRequest) returns (ListResourceUserResponse)

	// ServerOrg
	@handler AddServerOrgHandler
	post /server/org/add (AddServerOrgRequest) returns (ServerOrgResponse)

	@handler DeleteServerOrgHandler
	post /server/org/delete (DeleteServerOrgRequest) returns (Response)

	// ResourceOrg
	@handler AddResourceOrgHandler
	post /Resource/org/add (AddResourceOrgRequest) returns (ResourceOrgResponse)

	@handler DeleteResourceOrgHandler
	post /Resource/org/delete (DeleteResourceOrgRequest) returns (Response)

	// images
	@handler CreateImageHandler
	post /image/create (CreateImageRequest) returns (ImageResponse)

	@handler GetImageHandler
	post /image/get (GetImageRequest) returns (ImageResponse)

	@handler UpdateImageHandler
	post /image/update (UpdateImageRequest) returns (ImageResponse)

	@handler DeleteImageHandler
	post /image/delete (DeleteImageRequest) returns (Response)

	@handler ListImagesHandler
	post /image/list (ListImagesRequest) returns (ListImagesResponse)

	// Resource Discount endpoints
	@handler CreateDiscountHandler
	post /discount/create (CreateDiscountRequest) returns (DiscountResponse)

	@handler GetDiscountHandler
	post /discount/get (GetDiscountRequest) returns (DiscountResponse)

	@handler UpdateDiscountHandler
	post /discount/update (UpdateDiscountRequest) returns (DiscountResponse)

	@handler DeleteDiscountHandler
	post /discount/delete (DeleteDiscountRequest) returns (Response)

	@handler ListDiscountHandler
	post /discount/list (ListDiscountRequest) returns (ListDiscountResponse)

	// Server Discount endpoints
	@handler CreateServerDiscountHandler
	post /serverdiscount/create (CreateServerDiscountRequest) returns (ServerDiscountResponse)

	@handler GetServerDiscountHandler
	post /serverdiscount/get (GetServerDiscountRequest) returns (ServerDiscountResponse)

	@handler UpdateServerDiscountHandler
	post /serverdiscount/update (UpdateServerDiscountRequest) returns (ServerDiscountResponse)

	@handler DeleteServerDiscountHandler
	post /serverdiscount/delete (DeleteServerDiscountRequest) returns (Response)

	@handler ListServerDiscountHandler
	post /serverdiscount/list (ListServerDiscountRequest) returns (ListServerDiscountResponse)

	// Bucket endpoints
	@handler CreateBucketHandler
	post /bucket/create (CreateBucketRequest) returns (BucketResponse)

	@handler GetBucketHandler
	post /bucket/get (GetBucketRequest) returns (BucketResponse)

	@handler UpdateBucketHandler
	post /bucket/update (UpdateBucketRequest) returns (BucketResponse)

	@handler DeleteBucketHandler
	post /bucket/delete (DeleteBucketRequest) returns (Response)

	@handler ListBucketHandler
	post /bucket/list (ListBucketRequest) returns (ListBucketResponse)

	// Object endpoints
	@handler CreateObjectHandler
	post /object/create (CreateObjectRequest) returns (ObjectResponse)

	@handler GetObjectHandler
	post /object/get (GetObjectRequest) returns (ObjectResponse)

	@handler UpdateObjectHandler
	post /object/update (UpdateObjectRequest) returns (ObjectResponse)

	@handler DeleteObjectHandler
	post /object/delete (DeleteObjectRequest) returns (Response)

	@handler ListObjectHandler
	post /object/list (ListObjectRequest) returns (ListObjectResponse)

	@handler UploadObjectHandler
	post /object/uploadObject (UploadObjectRequest) returns (Object)
}

import "fca-updownload.api"
import "fca-google.api"
import "fca-html.api"
